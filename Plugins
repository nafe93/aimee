============= Система плагинов =============

В проекте имеется интерфес «jobs_strategy», описывыющий функция, которые обязательно должны присутствовать в плагине. По необходимости интерфейс может быть расширен разработчиком. Интерфейс — это патерн плагина.

Листинг интерфейса:

interface PluginInterfase
{
    public function Run();
    public function addJob($data);
}

При создании плагина, основной класс, должен быть наследником данного интерфейса и реализовывать все его функции. При этом принимаемые параметры стандартизированный.

Функция «addJob($data)» принимает и парсит параметры для отправки поста.
Принимаемы параметр «$data» должен содержать:

'user_id' строка
'social_network' массив
'user_account' массив
'script_name'  строка
'script_parameters' строка
'user_tokens' массив
'user_message' строка;
'check_shedule' строка без пробелов
'time_shedule' строка
'shedule_script_hours' строка
'shedule_script_minutes' строка
'script_total_repeat' строка
'source_network' массив
'source_account' массив
'script_tcreated_time' дата в формате: 'Y-m-d H:i:s'
'target_accaunt' массив

Функция «addJob» должна иметь модификатор доступа: public. Все остальные функции плагина — на усмотрение разработчика.



Система плагинов через маршруты

Для выполнения плагина необходимо перейти по маршруту: /jobs_strategy/{class}, где параметр «calss» есть главный класс исполняемого плагина.

Для большей абстракции был создан класс: AddAndStartPlagin. Для добавления нового плагина, необходимо, в конструкторе класса добавить название плгаина и экземпляр класса плагина.

Пример: $this→ArrPlag['название_плагина'] = new Главный_Класс_Плагина;
Листинг Конструктора:
public function __construct(){
    /*Добавление плагина вручную*/
    $this->ArrPlag['TwitterPlag'] = new TwitterPlug();
    /*===========================*/
    /*Добавление плагина вручную*/
    $this->ArrAjaxPlag['GetFullDescription'] = 'JobsController@GetFullDescription';
    /*==========================*/
}
Пример использования: $twPlug->StartPlugin('TwitterPlag',$result);
Для вызова плагина, необходимо сосздать экземпляр класса AddAndStartPlagin.
Далее вызвать функцию  StartPlugin(), которая принимает 2 параметра: Название плагина,
что было указано в конструкторе класса ($this→ArrPlag['название_плагина'] ) и передаваемы в плагин параметр,
в виде массива. Если плагин не принимает параметров можно не передавать его в функцию  StartPlugin.